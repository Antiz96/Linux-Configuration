## Arch Linux ARM Install tutorial for RPI 4
https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-4

$ pacman -Syy
$ pacman -Syu
$ reboot

## Then, I follow my Arch Linux Install Routine (without things that has already been done in the installation above like partitiong/filesystem, mount + pacstrap + genfstab, grub, exit and umount /mnt, etc... Also, I do not install the same drivers and same DE component as my main machine. See the pacman command I'm using for raspberry below. Finally I rename the default alarm user instead of creating a new one.
https://github.com/Antiz96/Linux-Customisation/blob/master/Arch-Linux/Base-Install/Arch%20Linux%20Base%20Installation.txt
----------------------------------------------
## Renaming default "arlarm" user
$ usermod -l rcandau alarm
$ groupmod -n rcandau alarm
$ usermod -d /home/rcandau -m rcandau
----------------------------------------------
----------------------------------------------
## Additionnal useful packages, drivers and DE
$ sudo pacman -S $(curl https://raw.githubusercontent.com/Antiz96/Linux-Customisation/master/Arch-Linux/Packages/icewm-rpi-minimal-packages.txt)
----------------------------------------------

## Also, don't forget to activate the swap partition
$ sudo swapon /dev/mmcblk0p3
$ sudo vim /etc/fstab
[...]
/dev/mmcblk0p3  none    swap    defaults        0       0

## Zip Archive containing IceWM conf for rapsberry :
$ mkdir -p ~/.icewm && curl https://raw.githubusercontent.com/Antiz96/Linux-Customisation/master/Dotfiles/IceWM/icewm-rpi.zip -O && unzip icewm-rpi.zip -d ~/.icewm/ && chmod +x ~/.icewm/startup && rm -f icewm-rpi.zip

-- Problems + FIX --

## No sound
# If you have no sound, please check that the pulseaudio package is installed on your raspberry
# If it is and you still have no sound, add this to /boot/config.txt (check this link https://archlinuxarm.org/platforms/armv7/broadcom/raspberry-pi-2)
dtparam=audio=on
hdmi_drive=2

## Raspberry Pi uncorrect date/time after boot
# Raspberry Pi has no HWclock, so we'll use a fake one from the AUR
# Set the correct date for your raspberry, then install/start/enable fake-hwclock
$ sudo date -s "yyyy-mm-dd hh:mm:ss"
$ yay -S fake-hwclock 
$ sudo systemctl start fake-hwclock
$ sudo systemctl enable fake-hwclock
